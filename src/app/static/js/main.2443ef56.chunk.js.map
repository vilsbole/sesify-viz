{"version":3,"sources":["example-config.js","example-deps.js","views/nav.js","App.js","serviceWorker.js","index.js","graphs/DepGraph.js"],"names":["module","exports","resources","<root>","modules","sesify-example-deep","sesify-example-format","globals","console.warn","localStorage","sesify-example-fetch","fetch","1","deps","foe","friend","entry","expose","file","id","index","indexDeps","order","package","2","3","4","5","6","React","require","Tab","Tabs","NavTabs","Component","render","routes","this","props","createElement","activeKey","activeRoute","onSelect","onNavigate","map","route","key","eventKey","title","DepGraph","exampleDeps","bundles","background","self","DEPS","Object","keys","sesifyModes","App","constructor","super","state","mode","bundle","sesifyMode","selectMode","target","setState","selectSesifyMode","bundleData","react_default","a","className","nav","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ObservableStore","GraphContainer","ForceGraph","util","createNode","createLink","exampleConfig","configData","CONFIG","createModuleGraph","nodes","links","forEach","parentId","packageName","size","configForPackage","label","JSON","stringify","isSesify","sesifyColor","packageConfig","some","glob","redAlertGlobals","includes","orangeAlertGlobals","getColorForConfig","color","push","radius","depName","childId","source","link","graph","container","width","height","graphStore","componentDidMount","updateGraph","componentWillReceiveProps","nextProps","packageData","pack","assign","values","createPackageGraph","createGraphByMode","updateState","onResize","actions","selectNode","console","log","ref","containerRef","onSize","createStyle"],"mappings":"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","file":"static/js/main.2443ef56.chunk.js","sourcesContent":["module.exports = {\n  \"resources\": {\n    \"<root>\": {\n      \"modules\": {\n        \"sesify-example-deep\": true,\n        \"sesify-example-format\": true\n      }\n    },\n    \"sesify-example-deep\": {\n      \"globals\": {\n        \"console.warn\": true,\n        \"localStorage\": true\n      },\n      \"modules\": {\n        \"sesify-example-fetch\": true\n      }\n    },\n    \"sesify-example-fetch\": {\n      \"globals\": {\n        \"fetch\": true\n      }\n    },\n    \"sesify-example-format\": {\n      \"globals\": {\n        \"console.warn\": true,\n        \"fetch\": true,\n        \"localStorage\": true\n      }\n    }\n  }\n}","module.exports = {\n  \"1\": {\n    \"deps\": {\n      \"foe\": 5,\n      \"friend\": 6,\n      \"sesify-example-deep\": 2,\n      \"sesify-example-format\": 4\n    },\n    \"entry\": true,\n    \"expose\": false,\n    \"file\": \"/home/xyz/Development/sesify-example/index.js\",\n    \"id\": 1,\n    \"index\": 1,\n    \"indexDeps\": {\n      \"foe\": 5,\n      \"friend\": 6,\n      \"sesify-example-deep\": 2,\n      \"sesify-example-format\": 4\n    },\n    \"order\": 0,\n    \"package\": \"<root>\"\n  },\n  \"2\": {\n    \"deps\": {\n      \"sesify-example-fetch\": 3\n    },\n    \"file\": \"/home/xyz/Development/sesify-example/node_modules/sesify-example-deep/index.js\",\n    \"id\": 2,\n    \"index\": 2,\n    \"indexDeps\": {\n      \"sesify-example-fetch\": 3\n    },\n    \"package\": \"sesify-example-deep\"\n  },\n  \"3\": {\n    \"deps\": {\n    },\n    \"file\": \"/home/xyz/Development/sesify-example/node_modules/sesify-example-fetch/index.js\",\n    \"id\": 3,\n    \"index\": 3,\n    \"indexDeps\": {\n    },\n    \"package\": \"sesify-example-fetch\"\n  },\n  \"4\": {\n    \"deps\": {\n    },\n    \"file\": \"/home/xyz/Development/sesify-example/node_modules/sesify-example-format/index.js\",\n    \"id\": 4,\n    \"index\": 4,\n    \"indexDeps\": {\n    },\n    \"package\": \"sesify-example-format\"\n  },\n  \"5\": {\n    \"deps\": {\n      \"friend\": 6\n    },\n    \"file\": \"/home/xyz/Development/sesify-example/src/foe.js\",\n    \"id\": 5,\n    \"index\": 5,\n    \"indexDeps\": {\n      \"friend\": 6\n    },\n    \"package\": \"<root>\"\n  },\n  \"6\": {\n    \"deps\": {\n    },\n    \"file\": \"/home/xyz/Development/sesify-example/src/friend.js\",\n    \"id\": 6,\n    \"index\": 6,\n    \"indexDeps\": {\n    },\n    \"package\": \"<root>\"\n  }\n}","import './bootstrap.css';\nconst React = require('react')\nconst Tab = require('react-bootstrap/Tab')\nconst Tabs = require('react-bootstrap/Tabs')\n\nclass NavTabs extends React.Component {\n  render() {\n    const { routes } = this.props\n    return (\n      <Tabs\n        id=\"navigation-tabs\"\n        activeKey={this.props.activeRoute}\n        onSelect={this.props.onNavigate}\n      >\n        {routes.map(route => (\n          <Tab key={route} eventKey={route} title={route}></Tab>\n        ))}\n      </Tabs>\n    )\n  }\n}\n\nexport default NavTabs","import React, { Component } from 'react'\nimport './App.css'\nimport Nav from './views/nav'\nconst DepGraph = require('./graphs/DepGraph')\nconst exampleDeps = require('./example-deps.js')\n// const bundles = {\n//   'background': require('./data/deps.json'),\n// }\n\n/* eslint-disable no-restricted-globals */\nconst bundles = { background: self.DEPS || exampleDeps }\nconst bundleNames = Object.keys(bundles)\n\nconst routes = ['packages', 'modules']\nconst sesifyModes = ['sesify', 'without']\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      mode: routes[0],\n      bundle: 'background',\n      sesifyMode: sesifyModes[0],\n    }\n  }\n\n  selectMode (target) {\n    this.setState(state => ({ mode: target }))\n  }\n\n  selectSesifyMode (target) {\n    this.setState(state => ({ sesifyMode: target }))\n  }\n\n  // selectBundle (target) {\n  //   this.setState(state => ({ bundle: target }))\n  // }\n\n  render () {\n    const bundleData = bundles[this.state.bundle]\n    return (\n      <div className=\"App\">\n        <Nav\n          routes={sesifyModes}\n          activeRoute={this.state.sesifyMode}\n          onNavigate={(target) => this.selectSesifyMode(target)}\n          />\n        <Nav\n          routes={routes}\n          activeRoute={this.state.mode}\n          onNavigate={(target) => this.selectMode(target)}\n          />\n        <DepGraph\n          bundleData={bundleData}\n          mode={this.state.mode}\n          sesifyMode={this.state.sesifyMode}\n          /> \n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const React = require('react')\nconst ObservableStore = require('obs-store')\nconst { GraphContainer, ForceGraph, util: { createNode, createLink } } = require('react-force-directed')\nconst exampleConfig = require('../example-config.js')\n\n// const configData = require('../data/config.json')\nconst configData = self.CONFIG || exampleConfig\n\nclass DepGraph extends React.Component {\n\n  constructor () {\n    super()\n    // prepare empty graph\n    this.graph = { nodes: [], links: [], container: { width: 0, height: 0 } }\n    // contain graph in observable store\n    this.graphStore = new ObservableStore(this.graph)\n  }\n\n  componentDidMount () {\n    // generate graph\n    const { bundleData, mode, sesifyMode } = this.props\n    this.updateGraph(bundleData, { mode, sesifyMode })\n  }\n\n  componentWillReceiveProps (nextProps) {\n    // recalculate graph if `mode` or `bundleData` change\n    if (this.props.mode !== nextProps.mode\n      || this.props.bundleData !== nextProps.bundleData\n      || this.props.sesifyMode !== nextProps.sesifyMode) {\n      const { bundleData, mode, sesifyMode } = nextProps\n      this.updateGraph(bundleData, { mode, sesifyMode })\n    }\n  }\n\n  updateGraph (bundleData, { mode, sesifyMode }) {\n    const { nodes, links } = createGraphByMode(bundleData, { mode, sesifyMode })\n    this.graphStore.updateState({ nodes, links })\n  }\n\n  onResize (size) {\n    this.graphStore.updateState({ container: size })\n  }\n\n  render () {\n    const actions = {\n      selectNode: console.log\n    }\n\n    return (\n      <div className=\"fullSize\" ref={this.containerRef}>\n        <GraphContainer onSize={size => this.onResize(size)}>\n          <ForceGraph graphStore={this.graphStore} actions={actions}/>\n        </GraphContainer>\n        {ForceGraph.createStyle()}\n      </div>\n    )\n  }\n}\n\nmodule.exports = DepGraph\n\n\nfunction createGraphByMode (bundleData, { mode, sesifyMode }) {\n  // create graph for mode\n  if (mode === 'modules') {\n    return createModuleGraph(bundleData, { sesifyMode })\n  } else {\n    return createPackageGraph(bundleData, { sesifyMode })\n  }\n}\n\nfunction createPackageGraph (bundleData, { sesifyMode }) {\n  const packageData = {}\n  \n  // create a fake `bundleData` using the packages\n  Object.keys(bundleData).forEach(parentId => {\n    const module = bundleData[parentId]\n    const { package: packageName } = module\n    let pack = packageData[packageName]\n    // if first module in package, initialize with module\n    if (!pack) {\n      pack = Object.assign({}, module)\n      pack.file = `${packageName} files`\n      pack.entry = (packageName === '<root>')\n      pack.deps = {}\n      packageData[packageName] = pack\n    } else {\n      // package already exists, just need add size (deps added later)\n      const { size } = module\n      pack.size += size\n    }\n    // add deps\n    Object.values(module.deps).forEach(id => {\n      // use `id` so that there are not redundant links. the actual key is not important.\n      pack.deps[id] = bundleData[id].package\n    })\n  })\n\n  return createModuleGraph(packageData, { sesifyMode })\n}\n\nfunction createModuleGraph (bundleData, { sesifyMode }) {\n  const nodes = [], links = []\n\n  // for each module, create node and links \n  Object.keys(bundleData).forEach(parentId => {\n    const { file, package:packageName, deps, size, entry } = bundleData[parentId]\n    const radius = 5\n    const configForPackage = configData.resources[packageName] || {}\n    const configLabel = JSON.stringify(configForPackage, null, 2)\n    const label = `${packageName}\\n${file}\\n${configLabel}`\n    const isEntryPackage = packageName === '<root>'\n    const isSesify = sesifyMode === 'sesify'\n    const sesifyColor = isEntryPackage ? 'purple' : getColorForConfig(configForPackage)\n    const color = isSesify ? sesifyColor : 'red'\n    // create node for modules\n    nodes.push(\n      createNode({ id: parentId, radius, label, color })\n    )\n    // create links for deps\n    Object.keys(deps).forEach(depName => {\n      const childId = deps[depName]\n      links.push(\n        createLink({ source: parentId, target: childId })\n      )\n    })\n  })\n\n  // handle missing nodes (e.g. external deps)\n  links.forEach(link => {\n    if (!bundleData[link.target]) {\n      nodes.push(\n        createNode({ id: link.target, radius: 0 })\n      )\n    }\n  })\n\n  return { nodes, links }\n}\n\nconst redAlertGlobals = [\n  'chrome',\n  'window',\n  'document',\n  'document.body',\n  'document.body.appendChild',\n  'location',\n  'XMLHttpRequest',\n  'fetch',\n  'WebSocket',\n  'crypto',\n]\n\nconst orangeAlertGlobals = [\n  'localStorage',\n  'prompt',\n]\n\nfunction getColorForConfig (packageConfig) {\n  // no globals - should be safe\n  if (!packageConfig.globals) return 'green'\n  const globals = Object.keys(packageConfig.globals)\n  if (globals.some(glob => redAlertGlobals.includes(glob))) {\n    return 'red'\n  }\n  if (globals.some(glob => orangeAlertGlobals.includes(glob))) {\n    return 'brown'\n  }\n  // has globals but nothing scary\n  return 'orange'\n}"],"sourceRoot":""}