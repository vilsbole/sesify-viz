{"version":3,"sources":["graphs/DepGraph.js","views/nav.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","DepGraph","react_force_graph__WEBPACK_IMPORTED_MODULE_0__","React","require","ObservableStore","GraphContainer","ForceGraph","util","createNode","createLink","exampleConfig","configData","self","CONFIG","Component","constructor","super","this","graph","nodes","links","container","width","height","graphStore","triggerForceUpdate","bind","state","data","id","componentDidMount","bundleData","mode","sesifyMode","props","updateGraph","subscribe","window","xyz","fg","d3Force","strength","componentWillUnmount","unsubscribe","console","log","getState","setState","componentWillReceiveProps","nextProps","createModuleGraph","packageData","Object","entries","forEach","parentId","moduleData","packageName","getPackageVersionName","pack","size","assign","file","entry","deps","values","childId","createPackageGraph","createGraphByMode","updateState","render","createElement","ref","el","graphData","linkDirectionalArrowLength","linkDirectionalArrowRelPos","nodeLabel","onNodeHover","node","parentData","packageVersionName","configForPackage","resources","label","JSON","stringify","isSesify","sesifyColor","packageConfig","globals","keys","some","glob","redAlertGlobals","includes","orangeAlertGlobals","getColorForConfig","color","push","radius","depName","String","source","target","link","packageVersion","Tab","Tabs","NavTabs","routes","activeKey","activeRoute","onSelect","onNavigate","map","route","key","eventKey","title","exampleDeps","bundles","background","DEPS","sesifyModes","App","bundle","selectMode","selectSesifyMode","react_default","a","className","nav","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5efb9a9f.chunk.js","sourcesContent":["import { ForceGraph2D, ForceGraph3D, ForceGraphVR } from 'react-force-graph'\n\nconst React = require('react')\nconst ObservableStore = require('obs-store')\nconst { GraphContainer, ForceGraph, util: { createNode, createLink } } = require('react-force-directed')\nconst exampleConfig = require('../example-config.json')\n\n// const configData = require('../data/config.json')\nconst configData = self.CONFIG || exampleConfig\n\nclass DepGraph extends React.Component {\n\n  constructor () {\n    super()\n    // prepare empty graph\n    this.graph = { nodes: [], links: [], container: { width: 0, height: 0 } }\n    // contain graph in observable store\n    this.graphStore = new ObservableStore(this.graph)\n    this.triggerForceUpdate = this.triggerForceUpdate.bind(this)\n    \n    this.state = {\n      data: {\n        nodes: [{ id: 0 }],\n        links: []\n      }\n    };\n  }\n\n  componentDidMount () {\n    const { graphStore } = this\n    // generate graph\n    const { bundleData, mode, sesifyMode } = this.props\n    this.updateGraph(bundleData, { mode, sesifyMode })\n    graphStore.subscribe(this.triggerForceUpdate)\n\n    window.xyz = this.fg\n\n    this.fg.d3Force('link').strength(1)\n  }\n\n  componentWillUnmount () {\n    const { graphStore } = this\n    graphStore.unsubscribe(this.triggerForceUpdate)\n  }\n\n  triggerForceUpdate () {\n    console.log('triggerForceUpdate', this.graphStore.getState())\n    this.setState(() => ({ data: this.graphStore.getState() }))\n    // this.graph = this.graphStore.getState()\n    // this.forceUpdate()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    // recalculate graph if `mode` or `bundleData` change\n    if (this.props.mode !== nextProps.mode\n      || this.props.bundleData !== nextProps.bundleData\n      || this.props.sesifyMode !== nextProps.sesifyMode) {\n      const { bundleData, mode, sesifyMode } = nextProps\n      this.updateGraph(bundleData, { mode, sesifyMode })\n    }\n  }\n\n  updateGraph (bundleData, { mode, sesifyMode }) {\n    const { nodes, links } = createGraphByMode(bundleData, { mode, sesifyMode })\n    this.graphStore.updateState({ nodes, links })\n  }\n\n  // onResize (size) {\n  //   this.graphStore.updateState({ container: size })\n  // }\n\n  render () {\n    const actions = {\n      selectNode: console.log\n    }\n\n    const { data } = this.state\n\n    return (\n      <ForceGraph2D\n        ref={el => this.fg = el}\n        graphData={data}\n        linkDirectionalArrowLength={4}\n        linkDirectionalArrowRelPos={1}\n        nodeLabel={'label'}\n        onNodeHover={(node) => {\n          if (!node) return\n          console.log(node)\n        }}\n      />\n    )\n  }\n}\n\nexport { DepGraph }\n\n\nfunction createGraphByMode (bundleData, { mode, sesifyMode }) {\n  // create graph for mode\n  if (mode === 'modules') {\n    return createModuleGraph(bundleData, { sesifyMode })\n  } else {\n    return createPackageGraph(bundleData, { sesifyMode })\n  }\n}\n\nfunction createPackageGraph (bundleData, { sesifyMode }) {\n  const packageData = {}\n  \n  // create a fake `bundleData` using the packages\n  Object.entries(bundleData).forEach(([parentId, moduleData]) => {\n    const packageName = getPackageVersionName(moduleData)\n    let pack = packageData[packageName]\n    // if first moduleData in package, initialize with moduleData\n    if (!pack) {\n      pack = Object.assign({}, moduleData)\n      pack.file = packageName\n      pack.entry = (packageName === '<root>')\n      pack.deps = {}\n      packageData[packageName] = pack\n    } else {\n      // package already exists, just need add size (deps added later)\n      const { size } = moduleData\n      pack.size += size\n    }\n    // add deps\n    Object.values(moduleData.deps).forEach(childId => {\n      // use `id` so that there are not redundant links. the actual key is not important.\n      pack.deps[childId] = getPackageVersionName(bundleData[childId])\n    })\n  })\n\n  return createModuleGraph(packageData, { sesifyMode })\n}\n\nfunction createModuleGraph (bundleData, { sesifyMode }) {\n  const nodes = [], links = []\n\n  // for each module, create node and links \n  Object.entries(bundleData).forEach(([parentId, parentData]) => {\n    const { file, deps, size, entry, packageName } = parentData\n    const packageVersionName = getPackageVersionName(parentData)\n    const radius = 5\n    const configForPackage = configData.resources[packageName] || {}\n    const configLabel = JSON.stringify(configForPackage, null, 2)\n    // const label = `${packageVersionName}\\n${file}\\n${configLabel}`\n    const label = `${file}`\n    const isEntryPackage = packageVersionName === '<root>'\n    const isSesify = sesifyMode === 'sesify'\n    const sesifyColor = isEntryPackage ? 'purple' : getColorForConfig(configForPackage)\n    const color = isSesify ? sesifyColor : 'red'\n    // create node for modules\n    nodes.push(\n      createNode({ id: parentId, radius, label, color })\n    )\n    // create links for deps\n    Object.keys(deps).forEach(depName => {\n      const childId = String(deps[depName])\n      links.push(\n        createLink({ source: parentId, target: childId })\n      )\n    })\n  })\n\n  // handle missing nodes (e.g. external deps)\n  links.forEach(link => {\n    if (!bundleData[link.target]) {\n      nodes.push(\n        createNode({ id: link.target, radius: 0 })\n      )\n    }\n  })\n\n  return { nodes, links }\n}\n\nconst redAlertGlobals = [\n  'chrome',\n  'window',\n  'document',\n  'document.body',\n  'document.body.appendChild',\n  'location',\n  'XMLHttpRequest',\n  'fetch',\n  'WebSocket',\n  'crypto',\n]\n\nconst orangeAlertGlobals = [\n  'localStorage',\n  'prompt',\n]\n\nfunction getColorForConfig (packageConfig) {\n  // no globals - should be safe\n  if (!packageConfig.globals) return 'green'\n  const globals = Object.keys(packageConfig.globals)\n  if (globals.some(glob => redAlertGlobals.includes(glob))) {\n    return 'red'\n  }\n  if (globals.some(glob => orangeAlertGlobals.includes(glob))) {\n    return 'brown'\n  }\n  // has globals but nothing scary\n  return 'orange'\n}\n\nfunction getPackageVersionName ({ packageName, packageVersion }) {\n  if (packageVersion) {\n    return `${packageName}@${packageVersion}`\n  } else {\n    return packageName\n  }\n}","import './bootstrap.css';\nconst React = require('react')\nconst Tab = require('react-bootstrap/Tab')\nconst Tabs = require('react-bootstrap/Tabs')\n\nclass NavTabs extends React.Component {\n  render() {\n    const { routes } = this.props\n    return (\n      <Tabs\n        id=\"navigation-tabs\"\n        activeKey={this.props.activeRoute}\n        onSelect={this.props.onNavigate}\n      >\n        {routes.map(route => (\n          <Tab key={route} eventKey={route} title={route}></Tab>\n        ))}\n      </Tabs>\n    )\n  }\n}\n\nexport default NavTabs","import React, { Component } from 'react'\nimport './App.css'\nimport Nav from './views/nav'\n\nconst { DepGraph } = require('./graphs/DepGraph')\nconst exampleDeps = require('./example-deps.json')\n// const bundles = {\n//   'background': require('./data/deps.json'),\n// }\n\n/* eslint-disable no-restricted-globals */\nconst bundles = { background: self.DEPS || exampleDeps }\nconst bundleNames = Object.keys(bundles)\n\nconst routes = ['packages', 'modules']\nconst sesifyModes = ['sesify', 'without']\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      mode: routes[0],\n      bundle: 'background',\n      sesifyMode: sesifyModes[0],\n    }\n  }\n\n  selectMode (target) {\n    this.setState(state => ({ mode: target }))\n  }\n\n  selectSesifyMode (target) {\n    this.setState(state => ({ sesifyMode: target }))\n  }\n\n  // selectBundle (target) {\n  //   this.setState(state => ({ bundle: target }))\n  // }\n\n  render () {\n    const bundleData = bundles[this.state.bundle]\n    return (\n      <div className=\"App\">\n        <Nav\n          routes={sesifyModes}\n          activeRoute={this.state.sesifyMode}\n          onNavigate={(target) => this.selectSesifyMode(target)}\n          />\n        <Nav\n          routes={routes}\n          activeRoute={this.state.mode}\n          onNavigate={(target) => this.selectMode(target)}\n          />\n        <DepGraph\n          bundleData={bundleData}\n          mode={this.state.mode}\n          sesifyMode={this.state.sesifyMode}\n          /> \n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}